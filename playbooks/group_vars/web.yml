---

## HAProxy
haproxy_global:
  log:
    - address: "/dev/log"
      facility: "local0"
      level: "info"
  stats:
    socket: "/var/run/haproxy.sock mode 600 level admin"
  ssl_default_bind_ciphers: "{{ ssl_ciphers }}"
  tune:
    ssl:
      default-dh-param: 4096
  user: "haproxy"
  group: "haproxy"
  chroot: "/var/lib/haproxy"
  daemon: true
  maxconn: 200000

haproxy_defaults:
  timeout:
      - param: 'connect'
        value: '5000ms'
      - param: 'client'
        value: '50000ms'
      - param: 'server'
        value: '50000ms'
      - param: 'check'
        value: '5000ms'
  options:
    - "redispatch"
    - "httpchk"

haproxy_stats_user: "haproxy"
haproxy_stats_pass: "{{ vault_haproxy_stats_pass }}"
haproxy_stats_port: 9000

haproxy_listen:
  - name: "stats"
    mode: "http"
    bind:
      - "{{ backnet_addr }}:{{ haproxy_stats_port }}"
    stats:
      enabled: true
      uri: "/"
      auth: "{{ haproxy_stats_user }}:{{ haproxy_stats_pass }}"

haproxy_frontends:
  - name: "fe-mirror"
    mode: "http"
    bind:
      - "{{ frontnet_addr }}:80"
    ssl:
      cert: "{{ ssl_pem_file }}"
    default_backend: "be-mirror"
    maxconn: "{{ haproxy_global.maxconn }}"

haproxy_backends:
  - name: "be-mirror"
    mode: "http"
    servers: "{{ haproxy_web_servers }}"

## DataDog
datadog_role_checks:
  haproxy:
    init_config: {}
    instances:
      - url: "http://{{ backnet_addr }}:{{ haproxy_stats_port }}/admin?stats"
        username: "{{ haproxy_stats_user }}"
        password: "{{ haproxy_stats_pass }}"

## Apache
apache_remove_default_vhost: true

## Firewalling
firewall_v4_group_rules:
  401 allow http traffic:
    - "-A INPUT -p tcp --dport 80 -j ACCEPT -d {{ frontnet_addr }}"
